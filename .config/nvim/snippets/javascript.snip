snippet init_test
    import assert from 'power-assert';

    describe('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet describe
    describe('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet it
    it('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet storeDump
    store.subscribe(() => console.log(store.getState()));

snippet webpack
    const path = require('path');

    const outputDir = path.join(__dirname, '${1:PATH}');

    module.exports = {
      entry: {
        ${2:NAME}: path.join(__dirname, '${3:PATH}'),
      },
      output: {
        path: outputDir,
        filename: '[name].bundle.js',
      },
      resolve: {
        extensions: ['', '.js', '.jsx'],
      },
      module: {
        loaders: [
          {
            test: /\.jsx?/,
            loader: 'babel',
          },
        ],
      },
      devtool: 'source-map',
      externals: [
        {
          window: 'window',
          document: 'document',
        },
      ],
    };

snippet assert_equal
    assert.strictEqual(${1:TARGET}, ${2:TARGET});

snippet assert_deep
    assert.deepStrictEqual(${1:TARGET}, ${2:TARGET});

snippet reducer
    export const ${1:TARGET} = (state = ${2:TARGET}, action) => {
      switch (action.type) {
        case ${2:TARGET}:
            ${3:TARGET}
        default:
          return state;
      }
    };
snippet actionType
    export const ${1:TARGET} = '$1';

snippet container
    import React, { PropTypes } from 'react';
    import { connect } from 'react-redux';

    const ${1:TARGET} = (${2:TARGET}) => (
      ${3:TARGET}
    );

    $1.propTypes = {
    };

    const mapStateToProps = state => ({
    });

    const mapDispatchToProps => ({
    });

    export default connect(mapStateToProps, mapDispatchToProps)($1);

snippet component
    const ${1:TARGET} = (${2:TARGET}) => (
      ${3:TARGET}
    );

    $1.propTypes = {
    };

snippet reduxForm
    import React from 'react'
    import { Field, reduxForm } from 'redux-form'

    const ${1:TARGET} = (${2:TARGET}) => (
      ${3:TARGET}
    );

    $1.propTypes = {
    };

    export default reduxForm({
      form: '${4:TARGET}'
    })($1)

snippet formReducer
    import { reducer as formReducer } from 'redux-form';

snippet combineReducers
    import { combineReducers } from 'redux';
