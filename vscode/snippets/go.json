{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"resdebug": {
		"body": [
			"if b, err := io.ReadAll(response.Body); err != nil {",
			"\tpanic(err)",
			"} else {",
			"\tresponse.Body = io.NopCloser(bytes.NewBuffer(b))",
			"\tfmt.Printf(\"=======\\n%s %s\\n\", response.Request.Method, response.Request.URL.Path)",
			"\tif err := os.WriteFile(fmt.Sprintf(\"./test_asset/%s%s.json\", response.Request.Method, strings.ReplaceAll(response.Request.URL.Path, \"/\", \"_\")), b, 0664); err != nil {",
			"\tpanic(err)",
			"\t}",
			"}"
		]
	}
}